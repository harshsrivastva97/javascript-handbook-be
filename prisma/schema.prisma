generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Users {
    user_id       Int            @id @default(autoincrement())
    email         String?        @unique
    display_name  String?
    github        String?
    linkedin      String?
    x_link        String?
    website_link  String?
    created_at    DateTime       @default(now())
    progress      Progress[]
    friends_added Friendship[]   @relation("UserFriends")
    friend_of     Friendship[]   @relation("FriendOf")
    notifications Notification[] @relation("UserNotifications")
}

model Topics {
    topic_id    Int        @id @default(autoincrement())
    name        String
    description String
    progress    Progress[]
}

model Progress {
    progress_id Int    @id @default(autoincrement())
    topic_id    Int
    user_id     Int
    progress    String

    topic Topics @relation(fields: [topic_id], references: [topic_id])
    user  Users  @relation(fields: [user_id], references: [user_id])

    @@unique([user_id, topic_id])
}

model Friendship {
    friendship_id Int      @id @default(autoincrement())
    user_id       Int // User who added the friend
    friend_id     Int // User who was added as friend
    created_at    DateTime @default(now())

    user   Users @relation("UserFriends", fields: [user_id], references: [user_id])
    friend Users @relation("FriendOf", fields: [friend_id], references: [user_id])

    @@unique([user_id, friend_id])
}

model Notification {
    notification_id Int      @id @default(autoincrement())
    user_id         Int // User who receives the notification
    message         String
    type            String // Can be used to categorize notifications (e.g., "FRIENDSHIP")
    is_read         Boolean  @default(false)
    created_at      DateTime @default(now())

    user Users @relation("UserNotifications", fields: [user_id], references: [user_id])
}
